# Copyright (c) 2014-2015 Arduino LLC.  All right reserved.
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

menu.cache=Cache
menu.speed=CPU Speed
menu.opt=Optimize
menu.maxqspi=Max QSPI

# Mini SAM M0 (SAMD21)
# ------------------------------
minisam_m0.name=Mini SAM M0
minisam_m0.vid.0=0x1209
minisam_m0.pid.0=0x2017
minisam_m0.upload.tool=bossac
minisam_m0.upload.protocol=sam-ba
minisam_m0.upload.maximum_size=262144
minisam_m0.upload.offset=0x2000
minisam_m0.upload.use_1200bps_touch=true
minisam_m0.upload.wait_for_upload_port=true
minisam_m0.upload.native_usb=true
minisam_m0.build.mcu=cortex-m0plus
minisam_m0.build.f_cpu=48000000L
minisam_m0.build.usb_product="Mini SAM M0"
minisam_m0.build.usb_manufacturer="@bwshockley"
minisam_m0.build.board=MINISAM_M0
minisam_m0.build.core=arduino
minisam_m0.build.extra_flags=-DCRYSTALLESS -DMINISAM_M0 -D__SAMD21G18A__ -DARM_MATH_CM0PLUS {build.usb_flags}
minisam_m0.build.ldscript=linker_scripts/gcc/flash_with_bootloader.ld
minisam_m0.build.openocdscript=openocd_scripts/minisam_m0.cfg
minisam_m0.build.variant=minisam_m0
minisam_m0.build.variant_system_lib=
minisam_m0.build.vid=0x1209
minisam_m0.build.pid=0x2017
minisam_m0.bootloader.tool=openocd
minisam_m0.bootloader.file=minisamM0/bootloader-minisam_m0-v2.0.0-adafruit.5.bin

# Mini SAM M4 (SAMD51)
# ------------------------------
minisam_m4.name=Mini SAM M4 (SAMD51)
minisam_m4.vid.0=0x1209
minisam_m4.pid.0=0x2017
minisam_m4.upload.tool=bossac18
minisam_m4.upload.protocol=sam-ba
minisam_m4.upload.maximum_size=507904
minisam_m4.upload.offset=0x4000
minisam_m4.upload.use_1200bps_touch=true
minisam_m4.upload.wait_for_upload_port=true
minisam_m4.upload.native_usb=true
minisam_m4.build.mcu=cortex-m4
#minisam_m4.build.f_cpu=120000000L
minisam_m4.build.usb_product="Mini SAM M4"
minisam_m4.build.usb_manufacturer="@bwshockley"
minisam_m4.build.board=MINISAM_M4
minisam_m4.build.core=arduino
minisam_m4.build.extra_flags=-D__SAMD51G19A__ -DMINISAM_M4 -D__SAMD51__ {build.usb_flags} -D__FPU_PRESENT -DARM_MATH_CM4 -DCRYSTALLESS -mfloat-abi=hard -mfpu=fpv4-sp-d16
minisam_m4.build.ldscript=linker_scripts/gcc/flash_with_bootloader.ld
minisam_m4.build.openocdscript=openocd_scripts/arduino_zero.cfg
minisam_m4.build.variant=minisam_m4
minisam_m4.build.variant_system_lib=
minisam_m4.build.vid=0x1209
minisam_m4.build.pid=0x2017
minisam_m4.bootloader.tool=openocd
minisam_m4.bootloader.file=minisamM4/bootloader-mini_sam_m4-v2.0.0-adafruit.5.bin
minisam_m4.compiler.arm.cmsis.ldflags="-L{build.variant.path}" -larm_cortexM4lf_math -mfloat-abi=hard -mfpu=fpv4-sp-d16
minisam_m4.menu.cache.on=Enabled
minisam_m4.menu.cache.on.build.cache_flags=-DENABLE_CACHE
minisam_m4.menu.cache.off=Disabled
minisam_m4.menu.cache.off.build.cache_flags=
minisam_m4.menu.speed.120=120 MHz (standard)
minisam_m4.menu.speed.120.build.f_cpu=120000000L
minisam_m4.menu.speed.150=150 MHz (overclock)
minisam_m4.menu.speed.150.build.f_cpu=150000000L
minisam_m4.menu.speed.180=180 MHz (overclock)
minisam_m4.menu.speed.180.build.f_cpu=180000000L
minisam_m4.menu.speed.200=200 MHz (overclock)
minisam_m4.menu.speed.200.build.f_cpu=200000000L
minisam_m4.menu.opt.small=Small (-Os) (standard)
minisam_m4.menu.opt.small.build.flags.optimize=-Os
minisam_m4.menu.opt.fast=Fast (-O2)
minisam_m4.menu.opt.fast.build.flags.optimize=-O2
minisam_m4.menu.opt.dragons=Here be dragons (-Ofast -funroll-loops)
minisam_m4.menu.opt.dragons.build.flags.optimize=-Ofast -funroll-loops
minisam_m4.menu.maxqspi.50=50 MHz (standard)
minisam_m4.menu.maxqspi.50.build.flags.maxqspi=-DVARIANT_QSPI_BAUD_DEFAULT=50000000
minisam_m4.menu.maxqspi.fcpu=CPU Speed / 2
minisam_m4.menu.maxqspi.fcpu.build.flags.maxqspi=-DVARIANT_QSPI_BAUD_DEFAULT=({build.f_cpu})

